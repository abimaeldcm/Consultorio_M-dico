// <auto-generated />
using System;
using Consultorio.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Consultorio.Infra.Data.Migrations
{
    [DbContext(typeof(ConsultorioDbContext))]
    partial class ConsultorioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Consultorio.Domain.Entity.Atendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Convenio")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IdServico")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdServico");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("Consultorio.Domain.Entity.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EspecialidadeMedica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EspecialidadeMedica = "Clínico Geral"
                        },
                        new
                        {
                            Id = 2,
                            EspecialidadeMedica = "Cardiologia"
                        },
                        new
                        {
                            Id = 3,
                            EspecialidadeMedica = "Pediatria"
                        },
                        new
                        {
                            Id = 4,
                            EspecialidadeMedica = "Ortopedia"
                        },
                        new
                        {
                            Id = 5,
                            EspecialidadeMedica = "Dermatologia"
                        },
                        new
                        {
                            Id = 6,
                            EspecialidadeMedica = "Oftalmologia"
                        },
                        new
                        {
                            Id = 7,
                            EspecialidadeMedica = "Psiquiatria"
                        },
                        new
                        {
                            Id = 8,
                            EspecialidadeMedica = "Ginecologia"
                        },
                        new
                        {
                            Id = 9,
                            EspecialidadeMedica = "Urologia"
                        },
                        new
                        {
                            Id = 10,
                            EspecialidadeMedica = "Neurologia"
                        });
                });

            modelBuilder.Entity("Consultorio.Domain.Entity.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdEspecialidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegistroCRM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoSanguineo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecialidade");

                    b.ToTable("Medicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "06445663225",
                            DataNascimento = new DateTime(1997, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "AntonioCaudas@email.com",
                            Endereco = "Rua dos Bobos, Nº 0",
                            IdEspecialidade = 1,
                            Nome = "Antônio Pereira Caudas",
                            RegistroCRM = "12345/PI",
                            Sobrenome = "Pereira Caudas",
                            Telefone = "86995287928",
                            TipoSanguineo = 0
                        },
                        new
                        {
                            Id = 2,
                            CPF = "09876543210",
                            DataNascimento = new DateTime(1985, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao.silva@email.com",
                            Endereco = "Av. Brasil, Nº 100",
                            IdEspecialidade = 2,
                            Nome = "João da Silva",
                            RegistroCRM = "54321/PI",
                            Sobrenome = "da Silva",
                            Telefone = "86995554433",
                            TipoSanguineo = 7
                        },
                        new
                        {
                            Id = 3,
                            CPF = "11223344556",
                            DataNascimento = new DateTime(1976, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria.oliveira@email.com",
                            Endereco = "Rua das Flores, Nº 50",
                            IdEspecialidade = 2,
                            Nome = "Maria Oliveira",
                            RegistroCRM = "67890/PI",
                            Sobrenome = "Oliveira",
                            Telefone = "869944332211",
                            TipoSanguineo = 5
                        },
                        new
                        {
                            Id = 4,
                            CPF = "55443322111",
                            DataNascimento = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos.souza@email.com",
                            Endereco = "Av. Principal, Nº 300",
                            IdEspecialidade = 4,
                            Nome = "Carlos Souza",
                            RegistroCRM = "13579/PI",
                            Sobrenome = "Souza",
                            Telefone = "869966998877",
                            TipoSanguineo = 6
                        },
                        new
                        {
                            Id = 5,
                            CPF = "33445566778",
                            DataNascimento = new DateTime(1983, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana.santos@email.com",
                            Endereco = "Rua da Paz, Nº 15",
                            IdEspecialidade = 5,
                            Nome = "Ana Santos",
                            RegistroCRM = "24680/PI",
                            Sobrenome = "Santos",
                            Telefone = "869977776655",
                            TipoSanguineo = 5
                        },
                        new
                        {
                            Id = 6,
                            CPF = "99887766554",
                            DataNascimento = new DateTime(1988, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedro.moraes@email.com",
                            Endereco = "Av. Central, Nº 200",
                            IdEspecialidade = 6,
                            Nome = "Pedro Moraes",
                            RegistroCRM = "97531/PI",
                            Sobrenome = "Moraes",
                            Telefone = "869988887766",
                            TipoSanguineo = 2
                        },
                        new
                        {
                            Id = 7,
                            CPF = "22113344556",
                            DataNascimento = new DateTime(1980, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernanda.costa@email.com",
                            Endereco = "Rua das Árvores, Nº 30",
                            IdEspecialidade = 7,
                            Nome = "Fernanda Costa",
                            RegistroCRM = "86420/PI",
                            Sobrenome = "Costa",
                            Telefone = "869933377755",
                            TipoSanguineo = 5
                        },
                        new
                        {
                            Id = 8,
                            CPF = "77889900123",
                            DataNascimento = new DateTime(1995, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rafaela.lima@email.com",
                            Endereco = "Av. das Estrelas, Nº 75",
                            IdEspecialidade = 8,
                            Nome = "Rafaela Lima",
                            RegistroCRM = "54321/PI",
                            Sobrenome = "Lima",
                            Telefone = "869922223344",
                            TipoSanguineo = 4
                        });
                });

            modelBuilder.Entity("Consultorio.Domain.Entity.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Altura")
                        .HasColumnType("float");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoSanguineo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Altura = 1.75,
                            CPF = "12345678901",
                            DataNascimento = new DateTime(1990, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria.silva@email.com",
                            Endereco = "Rua das Flores, Nº 10",
                            Nome = "Maria da Silva",
                            Peso = 70.0,
                            Sobrenome = "da Silva",
                            Telefone = "869988776655",
                            TipoSanguineo = 0
                        },
                        new
                        {
                            Id = 2,
                            Altura = 1.8,
                            CPF = "23456789012",
                            DataNascimento = new DateTime(1985, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jose.santos@email.com",
                            Endereco = "Av. Central, Nº 50",
                            Nome = "José Santos",
                            Peso = 85.0,
                            Sobrenome = "Santos",
                            Telefone = "869977665544",
                            TipoSanguineo = 3
                        },
                        new
                        {
                            Id = 3,
                            Altura = 1.6499999999999999,
                            CPF = "34567890123",
                            DataNascimento = new DateTime(1993, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana.souza@email.com",
                            Endereco = "Rua dos Pássaros, Nº 25",
                            Nome = "Ana Souza",
                            Peso = 60.0,
                            Sobrenome = "Souza",
                            Telefone = "869966554433",
                            TipoSanguineo = 5
                        },
                        new
                        {
                            Id = 4,
                            Altura = 1.7,
                            CPF = "45678901234",
                            DataNascimento = new DateTime(1980, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos.oliveira@email.com",
                            Endereco = "Av. Brasil, Nº 100",
                            Nome = "Carlos Oliveira",
                            Peso = 75.0,
                            Sobrenome = "Oliveira",
                            Telefone = "869955443322",
                            TipoSanguineo = 6
                        },
                        new
                        {
                            Id = 5,
                            Altura = 1.6000000000000001,
                            CPF = "56789012345",
                            DataNascimento = new DateTime(1975, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariana.costa@email.com",
                            Endereco = "Rua Principal, Nº 300",
                            Nome = "Mariana Costa",
                            Peso = 65.0,
                            Sobrenome = "Costa",
                            Telefone = "869944332211",
                            TipoSanguineo = 0
                        },
                        new
                        {
                            Id = 6,
                            Altura = 1.8500000000000001,
                            CPF = "67890123456",
                            DataNascimento = new DateTime(1992, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rafael.oliveira@email.com",
                            Endereco = "Av. das Árvores, Nº 15",
                            Nome = "Rafael Oliveira",
                            Peso = 80.0,
                            Sobrenome = "Oliveira",
                            Telefone = "869933221100",
                            TipoSanguineo = 5
                        },
                        new
                        {
                            Id = 7,
                            Altura = 1.75,
                            CPF = "78901234567",
                            DataNascimento = new DateTime(1987, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "juliana.lima@email.com",
                            Endereco = "Rua do Sol, Nº 200",
                            Nome = "Juliana Lima",
                            Peso = 70.0,
                            Sobrenome = "Lima",
                            Telefone = "869922110011",
                            TipoSanguineo = 2
                        },
                        new
                        {
                            Id = 8,
                            Altura = 1.8,
                            CPF = "89012345678",
                            DataNascimento = new DateTime(1996, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernando.santos@email.com",
                            Endereco = "Av. das Estrelas, Nº 75",
                            Nome = "Fernando Santos",
                            Peso = 85.0,
                            Sobrenome = "Santos",
                            Telefone = "869911001122",
                            TipoSanguineo = 5
                        });
                });

            modelBuilder.Entity("Consultorio.Domain.Entity.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Consultorio.Domain.Entity.Atendimento", b =>
                {
                    b.HasOne("Consultorio.Domain.Entity.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultorio.Domain.Entity.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultorio.Domain.Entity.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("IdServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Consultorio.Domain.Entity.Medico", b =>
                {
                    b.HasOne("Consultorio.Domain.Entity.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("IdEspecialidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");
                });
#pragma warning restore 612, 618
        }
    }
}
